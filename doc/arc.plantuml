@startuml
component [web client 1] as c1
component [web client 2] as c2
component [phone client] as pc
component [cli client] as clic
interface HTTP as http
interface REST as rest
interface "STOMP over WS" as stomp
interface "REST" as admint
folder "Mollycat instance" {
  component hs [
  <b>hub service</b>
  <i>core component</i>
  <i>handles access to data</i>
  <i>system can run on this component alone</i>
  ] 
  component as [
  <b>admin service</b>
  <i>client components (web services or cli)</i>
  <i>manages links to other nodes</i>
  <i>manages user and server configuration (possibly)</i>
  ] 
  component [client service] as cs
  component [git config] as config
  database "Database:\nusers\nstreams\nlinked hubs" as db
  cloud "message bus" as msg1
  hs <.right.> msg1
  as <.left.> msg1
  hs -down-> db
  as -down-> db
  as -up- admint
  cs <..> msg1
  note right of cs
    basic web access
    browsers
  end note
  note left of cs
    basic rest service
    command line 
    mobile apps
  end note
  note right of config
    publicly stored in github or
    private git server
  end note
  as <-up-> config
  hs -up-> config
  cs -up- http
  cs -up- rest
  cs -up- stomp
  c1 ..> http
  c2 ..> http
  c1 ..> rest
  c2 ..> rest
  pc ..> rest
  clic ..> rest
  c1 ..> stomp
  c2 ..> stomp
  c1 ..> stomp
  c2 ..> stomp
  pc ..> stomp
  clic ..> stomp
  component [interhub service] as ih1
  ih1 <.up.> msg1
}
cloud "external message bus" as msg2
ih1 <.down.> msg2
node "Mollycat sister instance 1" {
  component [interhub service] as ih2
}
node "Mollycat sister instance 2" {
  component [interhub service] as ih3
}
node "Mollycat sister instance 3" {
  component [interhub service] as ih4
}
ih2 <.up.> msg2
ih3 <.up.> msg2
ih4 <.up.> msg2
note as innote
event-driven interface
between mollycat instances
end note
innote .right. msg2
@enduml
